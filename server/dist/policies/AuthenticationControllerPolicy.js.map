{"version":3,"sources":["../../src/policies/AuthenticationControllerPolicy.js"],"names":["register","req","res","next","schema","email","string","password","regex","RegExp","error","value","validate","body","details","context","key","status","send","b"],"mappings":";;;;;;;AAAA;;;;;;AAEO,MAAMA,8BAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1C,QAAMC,SAAS;AACbC,WAAO,cAAIC,MAAJ,GAAaD,KAAb,EADM;AAEbE,cAAU,cAAID,MAAJ,GAAaE,KAAb,CAAmB,IAAIC,MAAJ,CAAW,qBAAX,CAAnB;AAFG,GAAf;AAIA,QAAM,EAAEC,KAAF,EAASC,KAAT,KAAmB,cAAIC,QAAJ,CAAaX,IAAIY,IAAjB,EAAuBT,MAAvB,CAAzB;;AAEA,MAAIM,KAAJ,EAAW;AACT,YAAQA,MAAMI,OAAN,CAAc,CAAd,EAAiBC,OAAjB,CAAyBC,GAAjC;AACE,WAAK,OAAL;AACEd,YAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBR,iBAAO;AADY,SAArB;AAGA;AACF,WAAK,UAAL;AACER,YAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBR,iBAAO;AADY,SAArB;AAGA;AACF;AACER,YAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAER,OAAO,2BAAT,EAArB;AACA;AAbJ;AAeD,GAhBD,MAgBO;AACLP;AACD;AACF,CA1BM;;AA4BA,MAAMgB,gBAAI,MAAM,CAAE,CAAlB","file":"AuthenticationControllerPolicy.js","sourcesContent":["import Joi from 'joi';\n\nexport const register = (req, res, next) => {\n  const schema = {\n    email: Joi.string().email(),\n    password: Joi.string().regex(new RegExp('^[a-zA-Z0-9]{8,32}$')),\n  };\n  const { error, value } = Joi.validate(req.body, schema);\n\n  if (error) {\n    switch (error.details[0].context.key) {\n      case 'email':\n        res.status(400).send({\n          error: 'You must provide a valid email address',\n        });\n        break;\n      case 'password':\n        res.status(400).send({\n          error: 'Bad password',\n        });\n        break;\n      default:\n        res.status(400).send({ error: 'Invalid registration info' });\n        break;\n    }\n  } else {\n    next();\n  }\n};\n\nexport const b = () => {};\n"]}